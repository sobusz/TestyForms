<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>